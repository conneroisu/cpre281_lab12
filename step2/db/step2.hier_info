|step2
rdata1[0] <= register_file:inst.rdata1[0]
rdata1[1] <= register_file:inst.rdata1[1]
rdata1[2] <= register_file:inst.rdata1[2]
rdata1[3] <= register_file:inst.rdata1[3]
clk => register_file:inst.clk
rst_n => register_file:inst.rst_n
we => register_file:inst.we
raddr1[0] => register_file:inst.raddr1[0]
raddr1[1] => register_file:inst.raddr1[1]
raddr1[2] => register_file:inst.raddr1[2]
raddr2[0] => register_file:inst.raddr2[0]
raddr2[1] => register_file:inst.raddr2[1]
raddr2[2] => register_file:inst.raddr2[2]
waddr[0] => register_file:inst.waddr[0]
waddr[1] => register_file:inst.waddr[1]
waddr[2] => register_file:inst.waddr[2]
wdata[0] => register_file:inst.wdata[0]
wdata[1] => register_file:inst.wdata[1]
wdata[2] => register_file:inst.wdata[2]
wdata[3] => register_file:inst.wdata[3]
rdata2[0] <= register_file:inst.rdata2[0]
rdata2[1] <= register_file:inst.rdata2[1]
rdata2[2] <= register_file:inst.rdata2[2]
rdata2[3] <= register_file:inst.rdata2[3]


|step2|register_file:inst
clk => clk.IN8
rst_n => rst_n.IN8
we => comb.IN1
we => comb.IN1
we => comb.IN1
we => comb.IN1
we => comb.IN1
we => comb.IN1
we => comb.IN1
we => comb.IN1
waddr[0] => waddr[0].IN1
waddr[1] => waddr[1].IN1
waddr[2] => waddr[2].IN1
raddr1[0] => raddr1[0].IN1
raddr1[1] => raddr1[1].IN1
raddr1[2] => raddr1[2].IN1
raddr2[0] => raddr2[0].IN1
raddr2[1] => raddr2[1].IN1
raddr2[2] => raddr2[2].IN1
wdata[0] => wdata[0].IN8
wdata[1] => wdata[1].IN8
wdata[2] => wdata[2].IN8
wdata[3] => wdata[3].IN8
rdata1[0] <= mux_8to1:read_mux1.out
rdata1[1] <= mux_8to1:read_mux1.out
rdata1[2] <= mux_8to1:read_mux1.out
rdata1[3] <= mux_8to1:read_mux1.out
rdata2[0] <= mux_8to1:read_mux2.out
rdata2[1] <= mux_8to1:read_mux2.out
rdata2[2] <= mux_8to1:read_mux2.out
rdata2[3] <= mux_8to1:read_mux2.out


|step2|register_file:inst|decoder_3to8:dec
select[0] => ShiftLeft0.IN11
select[1] => ShiftLeft0.IN10
select[2] => ShiftLeft0.IN9
decode_out[0] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
decode_out[1] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
decode_out[2] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
decode_out[3] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
decode_out[4] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
decode_out[5] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
decode_out[6] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
decode_out[7] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[0].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[0].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[0].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[0].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[0].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[1].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[1].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[1].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[1].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[1].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[2].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[2].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[2].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[2].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[2].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[3].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[3].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[3].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[3].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[3].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[4].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[4].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[4].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[4].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[4].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[5].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[5].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[5].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[5].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[5].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[6].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[6].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[6].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[6].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[6].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[7].reg_inst
clk => clk.IN4
clrn => clrn.IN4
load => load.IN4
D_in[0] => D_in[0].IN1
D_in[1] => D_in[1].IN1
D_in[2] => D_in[2].IN1
D_in[3] => D_in[3].IN1
Q[0] <= one_bit_register:bit_register[0].single_bit_reg.Q
Q[1] <= one_bit_register:bit_register[1].single_bit_reg.Q
Q[2] <= one_bit_register:bit_register[2].single_bit_reg.Q
Q[3] <= one_bit_register:bit_register[3].single_bit_reg.Q
not_Q[0] <= one_bit_register:bit_register[0].single_bit_reg.not_Q
not_Q[1] <= one_bit_register:bit_register[1].single_bit_reg.not_Q
not_Q[2] <= one_bit_register:bit_register[2].single_bit_reg.not_Q
not_Q[3] <= one_bit_register:bit_register[3].single_bit_reg.not_Q


|step2|register_file:inst|four_bit_register:registers[7].reg_inst|one_bit_register:bit_register[0].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[7].reg_inst|one_bit_register:bit_register[1].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[7].reg_inst|one_bit_register:bit_register[2].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|four_bit_register:registers[7].reg_inst|one_bit_register:bit_register[3].single_bit_reg
clk => Q~reg0.CLK
rst_n => Q~reg0.ACLR
load => Q~reg0.ENA
D_in => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
not_Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|mux_8to1:read_mux1
in0[0] => Mux3.IN0
in0[1] => Mux2.IN0
in0[2] => Mux1.IN0
in0[3] => Mux0.IN0
in1[0] => Mux3.IN1
in1[1] => Mux2.IN1
in1[2] => Mux1.IN1
in1[3] => Mux0.IN1
in2[0] => Mux3.IN2
in2[1] => Mux2.IN2
in2[2] => Mux1.IN2
in2[3] => Mux0.IN2
in3[0] => Mux3.IN3
in3[1] => Mux2.IN3
in3[2] => Mux1.IN3
in3[3] => Mux0.IN3
in4[0] => Mux3.IN4
in4[1] => Mux2.IN4
in4[2] => Mux1.IN4
in4[3] => Mux0.IN4
in5[0] => Mux3.IN5
in5[1] => Mux2.IN5
in5[2] => Mux1.IN5
in5[3] => Mux0.IN5
in6[0] => Mux3.IN6
in6[1] => Mux2.IN6
in6[2] => Mux1.IN6
in6[3] => Mux0.IN6
in7[0] => Mux3.IN7
in7[1] => Mux2.IN7
in7[2] => Mux1.IN7
in7[3] => Mux0.IN7
sel[0] => Mux0.IN10
sel[0] => Mux1.IN10
sel[0] => Mux2.IN10
sel[0] => Mux3.IN10
sel[1] => Mux0.IN9
sel[1] => Mux1.IN9
sel[1] => Mux2.IN9
sel[1] => Mux3.IN9
sel[2] => Mux0.IN8
sel[2] => Mux1.IN8
sel[2] => Mux2.IN8
sel[2] => Mux3.IN8
out[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|step2|register_file:inst|mux_8to1:read_mux2
in0[0] => Mux3.IN0
in0[1] => Mux2.IN0
in0[2] => Mux1.IN0
in0[3] => Mux0.IN0
in1[0] => Mux3.IN1
in1[1] => Mux2.IN1
in1[2] => Mux1.IN1
in1[3] => Mux0.IN1
in2[0] => Mux3.IN2
in2[1] => Mux2.IN2
in2[2] => Mux1.IN2
in2[3] => Mux0.IN2
in3[0] => Mux3.IN3
in3[1] => Mux2.IN3
in3[2] => Mux1.IN3
in3[3] => Mux0.IN3
in4[0] => Mux3.IN4
in4[1] => Mux2.IN4
in4[2] => Mux1.IN4
in4[3] => Mux0.IN4
in5[0] => Mux3.IN5
in5[1] => Mux2.IN5
in5[2] => Mux1.IN5
in5[3] => Mux0.IN5
in6[0] => Mux3.IN6
in6[1] => Mux2.IN6
in6[2] => Mux1.IN6
in6[3] => Mux0.IN6
in7[0] => Mux3.IN7
in7[1] => Mux2.IN7
in7[2] => Mux1.IN7
in7[3] => Mux0.IN7
sel[0] => Mux0.IN10
sel[0] => Mux1.IN10
sel[0] => Mux2.IN10
sel[0] => Mux3.IN10
sel[1] => Mux0.IN9
sel[1] => Mux1.IN9
sel[1] => Mux2.IN9
sel[1] => Mux3.IN9
sel[2] => Mux0.IN8
sel[2] => Mux1.IN8
sel[2] => Mux2.IN8
sel[2] => Mux3.IN8
out[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


